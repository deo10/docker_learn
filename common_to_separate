#create container with volume that mapped to /opt/security/
docker run -d --name blog -v /opt/security:/home nginx:latest

#copy file from to container
docker cp /opt/security/sample.txt my_container:/home/

#enable user jim to run docker commands without sudo
sudo usermod -aG docker jim #add user to the group
su - jim #log as jim
docker version #check docker command

#create docker image from existing(running) docker container
docker commit conteiner_id image:tag #create image
docker images #check that image created

#save docker image and load it with proper tag
docker image ls
docker image save games:devops -o games_devops.tar
docker image load -i games_devops.tar
docker image tag image_id games:devops

---
#install apache and configure it's port to 8088 on existing container
docker ps --all
docker exec it container_name /bin/bash

#in container bash
apt update
apt install apache2
apt install vim
vi /etc/apache2/ports.conf #change port
service apache2 start
service apache2 status
curl http://localhost:8088
exit

---
#Dockerfile create for apache on 5002 port
#base image
FROM ubuntu
ARG DEBIAN_FRONTEND=noninteractive

#install apache and change default port in config
RUN apt-get update
RUN apt-get install apache2 -y

#change default port to 5002
RUN sed -i "s/80/5002/g" /etc/apache2/ports.conf

EXPOSE 5002

#run apache service
CMD ["/usr/sbin/apache2ctl", "-D", "FOREGROUND", "-k", "start"]

---
#build
docker build -t apache2 .

#run
docker run --name http -p 5002:5002 -d apache2

#check
docker ps
curl http://localhost:5002

---
#create network with config (bridge driver) + use subnet 192.168.0.0/24 and iprange 192.168.0.3/24.

docker network create --subnet=192.168.0.0/24 --ip-range=192.168.0.3/24 blog
docker network inspect blog

#create docker compose with httpd image, map port 80 to 5000, and volume
docker-compose.yml

version: '3'
services:
  my_httpd:  # You can use any name you prefer for the service
    container_name: httpd
    image: httpd:latest
    ports:
      - "5000:80" #Map 80 port of container with port 5000 of docker host
    volumes:
      - /opt/devops:/usr/local/apache2/htdocs:ro #Map container's /usr/local/apache2/htdocs volume with /opt/devops volume of docker host
#run
docker-compose up -d


---
#Docker File
#Apache

FROM httpd:2.4.43

RUN sed -i "s/Listen 80/Listen 8080/g" /usr/local/apache2/conf/httpd.conf

RUN sed -i '/LoadModule\ ssl_module modules\/mod_ssl.so/s/^#//g' conf/httpd.conf

RUN sed -i '/LoadModule\ socache_shmcb_module modules\/mod_socache_shmcb.so/s/^#//g' conf/httpd.conf

RUN sed -i '/Include\ conf\/extra\/httpd-ssl.conf/s/^#//g' conf/httpd.conf

COPY certs/server.crt /usr/local/apache2/conf/server.crt

COPY certs/server.key /usr/local/apache2/conf/server.key

COPY html/index.html /usr/local/apache2/htdocs/


#commands
docker build -t apache2
docker run --name http -p 8080:8080 apache2:latest

---
docker-compose.yml

version: '3'
  services:
    web:
        build: ./app
        container_name: python
        ports:
            - "5000:5000"
        volumes:
            - ./app:/code
        depends_on:
            - redis
    redis:
        image: redis
        container_name: redis